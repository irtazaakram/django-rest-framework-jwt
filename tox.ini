[tox]
envlist =
    docs,manifest,
    py{38,39,310}-dj{32}-drf{313,314}-pyjwt{1,2}-codecov
    py{38,39,310,311}-dj{41}-drf{313,314}-pyjwt{1,2}-codecov
    py{38,39,310,311}-dj{42}-drf{314}-pyjwt{1,2}-codecov

[travis:env]
TRAVIS =
    true: codecov

[testenv]
description = run the test suite
usedevelop = true
passenv =
    CI
    TRAVIS
    TRAVIS_*
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONWARNINGS=once
    PYTHONPATH={toxinidir}/demo
deps =
    dj32: Django>=3.2,<4.0
    dj41: Django>=4.1,<4.2
    dj42: Django>=4.2,<4.3
    drf313: djangorestframework>=3.13,<3.14
    drf314: djangorestframework>=3.14,<3.15
    pyjwt1: PyJWT[crypto]>=1.5.2,<2.0.0
    pyjwt2: PyJWT[crypto]>=2.0.0,<3.0.0
    cryptography<3.4 # Avoiding the "needs Rust" versions
    coverage: coverage
    codecov: codecov
# bash is used to create the codecov flags from the envname,
# only when codecov is used in the envname
allowlist_externals =
    /bin/bash
    /usr/bin/bash
commands =
    pytest {posargs} --cov=rest_framework_jwt
    codecov: bash -ec 'flags={envname}; flags="$\{flags//-/,\}"; codecov --name={envname} --flags="$flags"'
extras =
    test

[testenv:docs]
description = build the documentation
basepython = python3.8
commands = mkdocs {posargs:build}
extras =
    test
    docs

[testenv:changelog]
description = build the changelog
basepython = python3.8
deps =
    towncrier==23.6.0
skip_install = true
commands =
    python -V
    towncrier {posargs}

[testenv:manifest]
basepython = python3.8
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:release]
description = build the changelog, bump the package version, commit and tag
basepython=python3.8
skip_install = true
allowlist_externals =
    git
    tox
passenv =
    HOME
deps =
    bumpversion==0.6.0
commands_pre =
    tox -e changelog -- --yes
    git commit -m "Build changelog"
    bumpversion {posargs:minor}
commands =
    git push origin
    git push origin --tags

[testenv:serve]
description = run the development server
usedevelop = true
changedir = {toxinidir}/demo
setenv =
    DJANGO_SETTINGS_MODULE=demo.settings.dev
extras =
    dev
commands =
    python manage.py runserver {posargs}


[testenv:deploy]
description = build the package and deploy it to PyPI.org
basepython = python3.8
isolated_build = True
skip_install = true
setenv =
    PYTHONPATH = {toxinidir}
requires =
    setuptools>=42.0.2
    wheel>=0.33.6
deps =
    twine>=3.1.1
commands_pre =
    python setup.py sdist bdist_wheel
commands =
    twine upload {posargs} --skip-existing dist/*
